---
- name: "Setting hostname to 'pihole'"
  hostname:
    name: pihole
  tags: admin
  register: reboot_device

- name: 'Update APT package cache'
  apt:
    update_cache: true
  tags: admin

- name: Install admin tools (vim, htop, git)
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - vim
      - htop
      - git

- name: Ensures /etc/pihole dir exists
  become: true
  file:
    path=/etc/pihole
    state=directory
  tags: pihole

- name: Create pihole configuration
  become: true
  template:
    src="templates/setupVars.conf.j2"
    dest="/etc/pihole/setupVars.conf"
    owner=root
    group=root
    mode=0644
  tags: pihole

- name: download pihole
  git:
    repo: 'https://github.com/pi-hole/pi-hole.git'
    dest: /home/Pi-hole
    depth: 1
    notify: install_pihole

- name: install_pihole
  command: bash "/home/Pi-hole/automated install/basic-install.sh" --unattended
  become: true

- name: download filterlists
  uri:
    url: https://v.firebog.net/hosts/lists.php?type=tick
    return_content: true
  register: filterlists

- name: add filterlists
  blockinfile:
    path: /etc/pihole/adlists.list
    block: "{{ filterlists.content }}"
    backup: true
    owner: root
    group: root
    mode: 0644
  notify: update_filterlists

- name: update_filterlists
  command: pihole -g

- name: Install unbound
  apt:
    name: unbound
    state: present

- name: Ensures /var/lib/unbound dir exists
  become: true
  file:
    path=/var/lib/unbound
    state=directory
  tags: pihole

- name: download root hints
  get_url:
    url=https://www.internic.net/domain/named.cache
    dest=/var/lib/unbound/root.hints

- name: add cronjob to update root hints
  become: true
  copy:
    src: files/root_hints
    dest: "/etc/cron.weekly"
    owner: root
    group: root
    mode: 0755

- name: Create unbound config
  become: true
  template:
    src="templates/unbound_config.j2"
    dest="/etc/unbound/unbound.conf.d/pi-hole.conf"
    owner=root
    group=root
    mode=0644
  tags: pihole

- name: Start unbound service
  become: true
  service:
    name: unbound
    state: started

- name: Reboot immediately if there was a change.
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: reboot_device is changed

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: reboot_device is changed
